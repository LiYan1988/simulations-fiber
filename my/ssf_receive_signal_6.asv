clc;
close all;
clear;

%% Load data
load ssf_receive_signal_5.mat

%% Plot signals

cidx = 1;
x = param.data_mod_t_current;

figure;
hold on;

% Downconverting
xt1 = x.*exp(1i*2*pi*param.center_frequency_channel(cidx).*param.t);
xt2 = upfirdn(xt1, param.filter_tx_channel{cidx}, 1, 1);
xt2 = xt2(param.filter_delay(cidx)+1:end-param.filter_delay(cidx));
plot(param.f_plot, abs(ft(xt2, param.df)).^2)

% dispersion compensation
% tmp_f = param.f+2*pi*param.center_frequency_channel(cidx);
% dc_filter = exp(-0.5*1i*param.beta2*(tmp_f).^2*span_length).*...
%     exp(-1i/6*param.beta3*(tmp_f).^3*param.span_length);

% xf_dc = ft(xt2, param.df);
% xf_dc = xf_dc.*dc_filter;
% xt_dc = ift(xf_dc, param.df);

scatterplot(...
    xt2(param.delay_filter_channel(cidx)+1:...
    end-param.delay_filter_channel(cidx)), ...
    param.sample_per_symbol(cidx), param.shift_channel_time(cidx))

%%
scatterplot(xt2, ...
    param.sample_per_symbol(cidx), param.shift_channel_time(cidx))

figure;
plot(param.t_plot, abs(xt2).^2)